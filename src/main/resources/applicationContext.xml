<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 日志 -->
    <aop:aspectj-autoproxy />
    <bean id="logBean" class="com.springaop.LogAnnotationAspect"></bean>

    <bean id="helloAop" class="com.springaop.test.HelloAop"/>

    <!-- 使用xml配置aop -->
    <!-- 强制使用cglib代理，如果不设置，将默认使用jdk的代理，但是jdk的代理是基于接口的 -->
   <!-- <aop:config proxy-target-class="true" />
    <aop:config>
        &lt;!&ndash;定义切面&ndash;&gt;
        <aop:aspect id="logAspect" ref="logBean">
            &lt;!&ndash; 定义切入点 (配置在com.gray.user.controller下所有的类在调用之前都会被拦截)&ndash;&gt;
            <aop:pointcut expression="execution(* com.springaop.test.HelloAop.*(..))" id="logPointCut"/>
            &lt;!&ndash;方法执行之前被调用执行的&ndash;&gt;
            <aop:before method="before" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;
            <aop:after method="after" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;
        </aop:aspect>
    </aop:config>-->
</beans>